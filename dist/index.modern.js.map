{"version":3,"file":"index.modern.js","sources":["../src/OTPInputs.tsx","../src/index.tsx"],"sourcesContent":["import React, {\r\n  CSSProperties,\r\n  ChangeEvent,\r\n  ClipboardEvent,\r\n  Fragment,\r\n  KeyboardEvent,\r\n  ReactElement,\r\n  RefObject,\r\n  createRef,\r\n  useEffect,\r\n  useState,\r\n} from 'react';\r\nimport styles from './inputs.module.css';\r\ntype InputsConfig = {\r\n  inputsNumber: number;\r\n  separator?: ReactElement;\r\n  setStringCode: React.Dispatch<React.SetStateAction<string>>;\r\n  setSubmitStatus?: React.Dispatch<React.SetStateAction<boolean>>;\r\n  regex?: RegExp;\r\n  inputsClasses?: string;\r\n  inputsStyles?: CSSProperties;\r\n  containerClasses?: string;\r\n  containerStyles?: CSSProperties;\r\n};\r\ntype ItemsType = {\r\n  id: number;\r\n  value: string;\r\n  reference: RefObject<HTMLInputElement>;\r\n};\r\nconst OTPInputs = ({\r\n  inputsClasses = '',\r\n  inputsStyles,\r\n  inputsNumber,\r\n  setStringCode,\r\n  setSubmitStatus,\r\n  separator,\r\n  regex = /^[0-9]*$/,\r\n}: InputsConfig): ReactElement => {\r\n  const [items, setItems] = useState<ItemsType[]>([]);\r\n  const [pasteStatus, setPasteStatus] = useState<boolean>(false);\r\n  const [filledInputs, setFilledInputs] = useState<number>(0);\r\n  const [clickedInput, setClickedInput] = useState<number | null>(null);\r\n\r\n  useEffect(() => {\r\n    const newArr: ItemsType[] = [];\r\n    for (let i = 0; i < inputsNumber; i++) {\r\n      newArr[i] = {\r\n        id: i,\r\n        value: '',\r\n        reference: createRef<HTMLInputElement>(),\r\n      };\r\n    }\r\n    setItems(newArr);\r\n  }, [inputsNumber]);\r\n\r\n  useEffect(() => {\r\n    setFilledInputs(0);\r\n    const values = items.map((value) => {\r\n      return value.value;\r\n    });\r\n    setStringCode(values.join(''));\r\n    items.map((value) => {\r\n      if (value.value !== '' && value.value !== ' ') {\r\n        setFilledInputs((prev) => prev + 1);\r\n      } else setFilledInputs(0);\r\n    });\r\n  }, [items]);\r\n\r\n  useEffect(() => {\r\n    if (setSubmitStatus) {\r\n      items.length !== 0 && filledInputs === items.length\r\n        ? setSubmitStatus(false)\r\n        : setSubmitStatus(true);\r\n    }\r\n  }, [filledInputs]);\r\n\r\n  const setCodeDigit = (inputValue: string, inputId: number): void => {\r\n    setItems((prev) => {\r\n      const newItems = prev.map(({ value, id, reference }) => {\r\n        if (id === inputId) {\r\n          return { id, value: inputValue, reference };\r\n        } else return { id, value, reference };\r\n      });\r\n      return newItems;\r\n    });\r\n  };\r\n\r\n  const checkDigits = (digit: string, id: number): void => {\r\n    let enteredCharacter: string = digit;\r\n    const checkDigit = regex.test(enteredCharacter);\r\n    const nextSiblingElement = items[id + 1]?.reference.current;\r\n    if (!checkDigit) {\r\n      enteredCharacter = '';\r\n    }\r\n    digit && setCodeDigit(enteredCharacter, id);\r\n    if (checkDigit && nextSiblingElement) {\r\n      nextSiblingElement.focus();\r\n      // nextSiblingElement.select();\r\n    }\r\n  };\r\n  const inputChangeHandler = (\r\n    e: ChangeEvent<HTMLInputElement>,\r\n    id: number,\r\n  ): void => {\r\n    if (\r\n      items.length <= inputsNumber &&\r\n      !pasteStatus &&\r\n      e.target.value.length < 2\r\n    ) {\r\n      checkDigits(e.target.value, id);\r\n    }\r\n  };\r\n\r\n  const inputKeyDownHandler = (\r\n    e: KeyboardEvent<HTMLInputElement>,\r\n    id: number,\r\n  ): void => {\r\n    const target = e.target as HTMLInputElement | null;\r\n    const nextElement = items[id + 1]?.reference.current;\r\n    if (target && e.key !== 'Backspace' && Number(target.value)) {\r\n      if (id === clickedInput) {\r\n        target.select();\r\n        setClickedInput(null);\r\n      } else {\r\n        if (nextElement && !nextElement.value) {\r\n          nextElement.focus();\r\n          // nextElement.select()\r\n        }\r\n      }\r\n    }\r\n    if (target && e.key === 'Backspace') {\r\n      const prevSibling = items[id - 1]?.reference.current;\r\n      setCodeDigit('', id);\r\n      if (!target.value && id > 0) setCodeDigit('', id - 1);\r\n      if (!target.value && id === 0) setCodeDigit('', id);\r\n      if (prevSibling) {\r\n        prevSibling.focus();\r\n        prevSibling.select();\r\n      }\r\n    }\r\n  };\r\n  const handleClick = (\r\n    e: React.MouseEvent<HTMLInputElement, MouseEvent>,\r\n    id: number,\r\n  ): void => {\r\n    setClickedInput(id);\r\n    e.currentTarget.select();\r\n  };\r\n  const inputPasteHandler = (e: ClipboardEvent<HTMLInputElement>): void => {\r\n    if (\r\n      e.clipboardData &&\r\n      e.clipboardData.getData('text').length === items.length\r\n    ) {\r\n      setPasteStatus(true);\r\n      const enteredData = e.clipboardData.getData('text');\r\n      enteredData.split('').forEach((value, index) => {\r\n        checkDigits(value, index);\r\n        index === items.length - 1 && setPasteStatus(false);\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <Fragment>\r\n      {items.map(({ value, id, reference }, key) => {\r\n        return (\r\n          <Fragment key={`OTPInput_${id}`}>\r\n            <input\r\n              style={{ ...inputsStyles }}\r\n              ref={reference}\r\n              onClick={(e) => handleClick(e, id)}\r\n              onChange={(e) => inputChangeHandler(e, id)}\r\n              onKeyDown={(e) => inputKeyDownHandler(e, id)}\r\n              onPaste={(e) => inputPasteHandler(e)}\r\n              value={value}\r\n              inputMode=\"numeric\"\r\n              type=\"text\"\r\n              autoComplete=\"one-time-code\"\r\n              className={`${styles.inputs} ${inputsClasses}`}\r\n            />\r\n            {key < items.length - 1 && separator}\r\n          </Fragment>\r\n        );\r\n      })}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default OTPInputs;\r\n","import React, { CSSProperties, ReactElement } from 'react';\nimport styles from './inputs.module.css';\nimport OTPInputs from './OTPInputs';\n\nexport type InputsConfig = {\n  inputsNumber: number;\n  separator?: ReactElement;\n  setStringCode: React.Dispatch<React.SetStateAction<string>>;\n  setSubmitStatus?: React.Dispatch<React.SetStateAction<boolean>>;\n  regex?: RegExp;\n  inputsClasses?: string;\n  inputsStyles?: CSSProperties;\n  containerClasses?: string;\n  containerStyles?: CSSProperties;\n};\nexport const OTP = ({\n  inputsClasses = '',\n  inputsStyles,\n  containerClasses = '',\n  containerStyles,\n  inputsNumber,\n  setStringCode,\n  setSubmitStatus,\n  separator,\n  regex = /^[0-9]*$/,\n}: InputsConfig): ReactElement => {\n  return (\n    <div\n      style={{ ...containerStyles }}\n      className={`${styles.container}\n      ${containerClasses}`}\n    >\n      <OTPInputs\n        inputsClasses={inputsClasses}\n        inputsStyles={inputsStyles}\n        containerClasses={containerClasses}\n        inputsNumber={inputsNumber}\n        setStringCode={setStringCode}\n        setSubmitStatus={setSubmitStatus}\n        separator={separator}\n        regex={regex}\n      />\n    </div>\n  );\n};\n"],"names":["OTPInputs","_ref","inputsClasses","_ref$inputsClasses","inputsStyles","inputsNumber","setStringCode","setSubmitStatus","separator","_ref$regex","regex","_useState","useState","items","setItems","_useState2","pasteStatus","setPasteStatus","_useState3","filledInputs","setFilledInputs","_useState4","clickedInput","setClickedInput","useEffect","newArr","i","id","value","reference","createRef","values","map","join","prev","length","setCodeDigit","inputValue","inputId","newItems","_ref2","checkDigits","digit","enteredCharacter","checkDigit","test","nextSiblingElement","_items","current","focus","inputChangeHandler","e","target","inputKeyDownHandler","nextElement","_items2","key","Number","select","_items3","prevSibling","handleClick","currentTarget","inputPasteHandler","clipboardData","getData","enteredData","split","forEach","index","React","Fragment","_ref3","style","_extends","ref","onClick","onChange","onKeyDown","onPaste","inputMode","type","autoComplete","className","styles","inputs","OTP","_ref$containerClasses","containerClasses","containerStyles","container"],"mappings":"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"}